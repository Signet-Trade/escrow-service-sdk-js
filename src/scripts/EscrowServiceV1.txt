/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { BaseHttpRequest } from './core/BaseHttpRequest';
import type { OpenAPIConfig } from './core/OpenAPI';
import { AxiosHttpRequest } from './core/AxiosHttpRequest';

import { EscrowTokenPresaleWithLiquidityService } from './services/EscrowTokenPresaleWithLiquidityService';
import { EscrowOverTheCounterService } from './services/EscrowOverTheCounterService';
import { WalletService } from './services/WalletService';
import { UserService } from './services/UserService';

type HttpRequestConstructor = new (config: OpenAPIConfig) => BaseHttpRequest;

export class EscrowServiceV1 {
	public readonly escrowTokenPresale: EscrowTokenPresaleWithLiquidityService;
	public readonly escrowOverTheCounter: EscrowOverTheCounterService;
	public readonly wallet: WalletService;
	public readonly user: UserService;

	private readonly request: BaseHttpRequest;

	constructor(
		config?: Partial<OpenAPIConfig>,
		HttpRequest: HttpRequestConstructor = AxiosHttpRequest,
	) {
		this.request = new HttpRequest({
			BASE: config?.BASE ?? 'https://api.signet.trade',
			HEADERS: config?.HEADERS ?? {},
			SIGNET_ACCESS_KEY: config?.SIGNET_ACCESS_KEY ?? '',
			SIGNET_ACCESS_SECRET: config?.SIGNET_ACCESS_SECRET ?? '',
			VERBOSE: config?.VERBOSE ?? false,
		});

		this.escrowTokenPresale = new EscrowTokenPresaleWithLiquidityService(
			this.request,
		);
		this.escrowOverTheCounter = new EscrowOverTheCounterService(
			this.request,
		);
		this.wallet = new WalletService(this.request);

		this.user = new UserService(this.request);
	}
}
